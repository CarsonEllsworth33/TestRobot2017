// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveBaseSubFrontLeftMotor;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubFrontRightMotor;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubBackLeftMotor;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubBackRightMotor;
std::shared_ptr<RobotDrive> RobotMap::driveBaseSubRobotDrive;
std::shared_ptr<SpeedController> RobotMap::shooterSubShooterMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveBaseSubFrontLeftMotor.reset(new Talon(0));
    lw->AddActuator("DriveBaseSub", "FrontLeftMotor", std::static_pointer_cast<Talon>(driveBaseSubFrontLeftMotor));
    
    driveBaseSubFrontRightMotor.reset(new Talon(1));
    lw->AddActuator("DriveBaseSub", "FrontRightMotor", std::static_pointer_cast<Talon>(driveBaseSubFrontRightMotor));
    
    driveBaseSubBackLeftMotor.reset(new Talon(2));
    lw->AddActuator("DriveBaseSub", "BackLeftMotor", std::static_pointer_cast<Talon>(driveBaseSubBackLeftMotor));
    
    driveBaseSubBackRightMotor.reset(new Talon(3));
    lw->AddActuator("DriveBaseSub", "BackRightMotor", std::static_pointer_cast<Talon>(driveBaseSubBackRightMotor));
    
    driveBaseSubRobotDrive.reset(new RobotDrive(driveBaseSubFrontLeftMotor, driveBaseSubFrontRightMotor,
              driveBaseSubBackLeftMotor, driveBaseSubBackRightMotor));
    
    driveBaseSubRobotDrive->SetSafetyEnabled(false);
        driveBaseSubRobotDrive->SetExpiration(0.1);
        driveBaseSubRobotDrive->SetSensitivity(0.5);
        driveBaseSubRobotDrive->SetMaxOutput(1.0);

    shooterSubShooterMotor.reset(new Talon(4));
    lw->AddActuator("Shooter Sub", "ShooterMotor", std::static_pointer_cast<Talon>(shooterSubShooterMotor));
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
